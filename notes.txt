* yarn add -D @types/node typescript
* npx tsconfig.json
* yarn add -D ts-node
    * ts-node src/index.ts
* tsc -w
* yarn add @mikro-orm/cli @mikro-orm/core @mikro-orm/migrations @mikro-orm/postgresql pg

======= migrations
* add below to package.json
  "mikro-orm": {
    "useTsNode": true,
    "configPaths": [
      "./src/mikro-orm.config.ts",
      "./dist/mikro-orm.config.js"
    ]
  }
* create migrations schema and tables files
    npx mikro-orm migration:create --initial

======== specify migrations in mikro-orm.config.ts
{
    migrations: {
        path: path.join(__dirname, './migrations'),
        pattern: /^[\w-]+\d+\.[tj]s$/,
    },
    entities: [Post],
    dbName: 'lereddit',
    user: 'power',
    password: 'power',
    type: 'postgresql',
    debug: !__prod__
}


======== Type Graphql
yarn add express apollo-server-express graphql type-graphql
yarn add -D @types/express
yarn add reflect-metadata
-> object types are for return from query/functions
-> input types are for input for query/functions

========= setting session in graphql =========
* Two packages needed:-
  express-session & connect-redis
* install redis-server
* commands
  1) yarn add redis connect-redis express-session
  2) yarn add -D @types/connect-redis @types/express-session
* set request.credentials to "include" in browser playground
